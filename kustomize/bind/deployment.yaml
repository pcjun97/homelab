apiVersion: apps/v1
kind: Deployment
metadata:
  name: bind
  labels:
    app.kubernetes.io/name: bind
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bind
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bind
    spec:
      containers:
        - name: bind
          image: "mvance/bind"
          ports:
            - containerPort: 53
              name: dns
        - name: cloudflared
          image: "mvance/bind"
          ports:
            - containerPort: 53
              name: dns
        - name: tailscale
          image: "ghcr.io/tailscale/tailscale"
          env:
            - name: TS_USERSPACE
              value: "false"
            - name: TS_AUTHKEY
              value: "tskey-auth-kwDgtG4CNTRL-ThwgkJZvKMKo4vGbghnpHKoY6es61xFbf"
            - name: TS_ACCEPT_DNS
              value: "true"
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
        - name: cloudflared
          image: cloudflare/cloudflared:2022.3.0
          args:
            - tunnel
            - --config
            - /etc/cloudflared/config/config.yaml
            - run
          livenessProbe:
            httpGet:
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config
              readOnly: true
            - name: creds
              mountPath: /etc/cloudflared/creds
              readOnly: true
      volumes:
        - name: creds
          secret:
            secretName: tunnel-credentials
        - name: config
          configMap:
            name: cloudflared
            items:
              - key: config.yaml
                path: config.yaml
